- name: Install Important Repos
  yum:
    name: "{{ item }}"
    state: present
  with_items:
    - https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
    - https://mirror.webtatic.com/yum/el7/webtatic-release.rpm
    - http://yum.opennms.org/repofiles/opennms-repo-stable-rhel7.noarch.rpm

- name: Install support programs for Observium php7
  yum:
    name: "{{ item }}"
    state: present
  with_items:
    - wget.x86_64
    - firewalld
    - httpd.x86_64
    - php70w.x86_64
    - php70w-opcache.x86_64
    - php70w-mysql.x86_64
    - php70w-gd.x86_64
    - php70w-posix
    - php70w-mcrypt.x86_64
    - php70w-pear.noarch
    - cronie.x86_64
    - net-snmp.x86_64
    - net-snmp-utils.x86_64
    - fping.x86_64
    - mariadb-server.x86_64
    - mariadb.x86_64
    - MySQL-python.x86_64
    - rrdtool.x86_64
    - subversion.x86_64
    - jwhois.x86_64
    - ipmitool.x86_64
    - graphviz.x86_64
    - ImageMagick.x86_64


- name: Turn off SElinux
  lineinfile:
    dest: /etc/selinux/config
    regexp: '^SELINUX='
    line: 'SELINUX=disabled'


# create a directory if it doesn't exist
- name: Create observium install Directory
  file:
    path: "{{install_dir}}"
    state: directory
    mode: 0755


- name: download file with check (md5)
  get_url:
    url: http://www.observium.org/observium-community-latest.tar.gz
    dest: /tmp/observium.tar.gz
    checksum: md5:a2e1fa205e4d39d6cdf7291f9f15b92f

- name: Unzip observium install
  command: "/usr/bin/tar --strip-components=1 -zxf /tmp/observium.tar.gz -C {{install_dir}}"
  args:
    creates: "{{install_dir}}/INSTALL"

- name: Create observium install Directory RRD
  file:
    path: "{{install_dir}}/rrd"
    state: directory
    owner: apache
    group: apache
    mode: 0755

- name: Create observium install Directory logs
  file:
    path: "{{install_dir}}/logs"
    state: directory
    owner: apache
    group: apache
    mode: 0755

- name: Copy HTTP Config File
  template:
    src: observium.conf.j2
    dest: /etc/httpd/conf.d/observium.conf
  tags: httpd, service
  notify: Restart httpd

- name: Install cron
  template:
    src: observium.cron.j2
    dest: /etc/cron.d/observium
  tags: service
  notify: Restart cron

- name: Copy Observium config file
  template:
    src: config.php.j2
    dest: "{{install_dir}}/config.php"

- name: Start Mariadb
  systemd:
      name: mariadb
      state: started
      enabled: yes
      daemon_reload: yes
  tags: mariadb, service

- name: Fix Mariadb Root User
  command: "/usr/bin/mysqladmin -uroot -p{{mysql_root_pw}} ping"
  register: result
  changed_when: "result.stdout !='mysqld is alive'"
# mysqld is alive

- name: Create Observium Database
  mysql_db:
    name: observium
    state: present
    login_user: root
    login_password: '{{mysql_root_pw}}'

- mysql_user:
    name: observium
    password: "{{observium_pw}}"
    priv: "observium.*:ALL"
    state: present
    login_user: root
    login_password: '{{mysql_root_pw}}'

- name: Setup the MySQL database and insert the default schema
  command: php discovery.php -u
  register: observiumDiscovery
  args:
      chdir: "{{install_dir}}"
  changed_when: >
    "Database is up to date" not in observiumDiscovery.stdout
#Database is up to date


- name: Firewalld start service
  systemd:
      name: firewalld
      state: started
      enabled: yes
      daemon_reload: yes
  tags: service

- name: Firewalld Allow HTTPD
  firewalld:
    service: http
    permanent: true
    state: enabled
  notify: Restart firewalld

- name: Add base admin user
  command: "php ./adduser.php {{observium_admin}} {{observium_admin_pw}} 10"
  register: addUser
  args:
      chdir: "{{install_dir}}"
  changed_when: >
    "User admin added successfully" in addUser.stdout

- name: Setup Hosts to monitor
  command: "php ./add_device.php -p {{monitoring_hosts.ip}} {{monitoring_hosts.community}} {{monitoring_hosts.version}}"
  register: addDevice
  args:
      chdir: "{{install_dir}}"
  changed_when: >
    "Already got device" in addDevice.stdout
  with_items:
    - "{{ monitoring_hosts }}"
